// *** Layout predicates ***

predicate ro_Sll(loc x) {
| (x == 0) => { emp }
| (not (x == 0)) => { [x,2] ** x :=> head ** (x+1) :=> tail ** ro_Sll(tail) }
}
predicate ro_ListOfListsLayout(loc x) {
| (x == 0) => { emp }
| (not (x == 0)) => { [x,2] ** x :=> head ** (x+1) :=> tail ** ro_ListOfListsLayout(tail) ** ro_Sll(head) }
}


// *** Function predicates ***

predicate sum__Int__ro_Sll(loc __p_x0, int __r) {
| (__p_x0 == 0) => { __r == 0 ; emp }
| (not (__p_x0 == 0)) => { __r == (head + __p_1) && __temp_0 == __p_1 ; __p_x0 :-> head ** (__p_x0+1) :-> tail ** [__p_x0,2] ** sum__Int__ro_Sll(tail, __temp_0) }
}


// *** Function specifications ***


void sum(loc x1, loc r)
  { x1 :-> x1__i ** ro_Sll(x1__i) ** r :-> initialVal }
  { x1 :-> x1__i ** sum__Int__ro_Sll(x1__i, r0) ** r :-> r0 }
{ ?? }

{r :-> initialVal ** x1 :-> x1__i ** ro_Sll(x1__i)<_alpha_4>}
{r :-> r0 ** x1 :-> x1__i ** sum__Int__ro_Sll(x1__i, r0)<_alpha_5>}
void sum (loc x1, loc r) {
  let x = *x1;
  if (x == 0) {
    *r = 0;
  } else {
    let h = *x;
    let t = *(x + 1);
    *r = t;
    sum(r, x1);
    let r0 = *x1;
    *x1 = x;
    *r = h + r0;
  }
}



--- Source AST size: 95

--- SuSLik AST size: 137
