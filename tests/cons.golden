// *** Layout predicates ***

predicate ro_Sll(loc x) {
| (x == 0) => { emp }
| (not (x == 0)) => { [x,2] ** x :=> head ** (x+1) :=> tail ** ro_Sll(tail) }
}


// *** Function predicates ***

predicate cons__ro_Sll__Int__ro_Sll(int __p_0, loc __p_x1, loc __r_x) {
| true => { __r_x :-> __p_0 ** (__r_x+1) :-> __p_x1 ** [__r_x,2] }
}


// *** Function specifications ***


void cons(loc x1, loc x2, loc r)
  { ro_Sll(x2) ** r :-> initialVal }
  { cons__ro_Sll__Int__ro_Sll(x1, x2, r0) ** r :-> r0 }
{ ?? }

{r :-> initialVal ** ro_Sll(x2)<_alpha_1>}
{r :-> r0 ** cons__ro_Sll__Int__ro_Sll(x1, x2, r0)<_alpha_2>}
void cons (loc x1, loc x2, loc r) {
  if (x2 == 0) {
    let r0 = malloc(2);
    *r = r0;
    *r0 = x1;
    *(r0 + 1) = x2;
  } else {
    let t = *(x2 + 1);
    cons(x1, t, r);
    let r = *r;
    free(x2);
    *(r + 1) = x2;
  }
}



--- Source AST size: 52

--- SuSLik AST size: 78
