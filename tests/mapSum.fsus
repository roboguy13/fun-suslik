%generate sum [Sll[readonly]] Int
%generate mapSum [ListOfListsLayout[readonly]] Sll

data List := Nil | Cons Int List;

data ListOfLists := LNil | LCons List ListOfLists;

Sll : List >-> layout[x];
Sll (Nil) := emp;
Sll (Cons head tail) := x :-> head, (x+1) :-> tail, Sll tail;

ListOfListsLayout : ListOfLists >-> layout[x];
ListOfListsLayout (LNil) := emp;
ListOfListsLayout (LCons head tail) :=
  x :-> head, (x+1) :-> tail, ListOfListsLayout tail,
  Sll head;

sum : (Ptr List) -> Int;
sum (Nil) := 0;
sum (Cons head tail) := head + (sum tail);

mapSum : ListOfLists -> List;
mapSum (LNil) := Nil;
mapSum (LCons xs xss) :=
  Cons (instantiate [Sll[readonly]] Int sum (addr xs))
       (mapSum xss);

